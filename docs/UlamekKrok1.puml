@startuml
'' plantumlfile1
'' skinparam handwritten true
skinparam classAttributeIconSize 0
set namespaceSeparator ::

title Struktura Ulamek -- krok 1

note top of Ulamek
  # Typ ""Ulamek"" jest strukturą
  # Instancje typu ""Ulamek"" są <i>immutables</i>
  # ""Ulamek"" o mianowniku == 0 nie istnieje
  # Domyślną wartością typu jest ułamek
  o liczniku == 0 oraz mianowniku == 1
  # Tekstowa reprezentacja ułamka:
  ""[znak]<licznik>/<mianownik>""
end note




class Ulamek <<struct>> {
  .. pola ..
  - long licznik {readonly}
  - long mianownik {readonly}
  .. gettersy ..
  + long Licznik {get}
  + long Mianownik {get}
  --  konstruktory  --
  + --Ulamek()--
  + Ulamek( long licznik, long mianownik )
  + Ulamek( long liczba )
  + Ulamek( double liczba )
  + Ulamek( string napis )

  -- reprezentacja tekstowa --
  + string ToString() {override}
}







abstract class System::ValueType <<abstract class>> {
  + ValueType()
  + string ToString() {override}
}



class System::Object <<class>> {
  + Object()
  ..
  + bool Equals() {virtual}
  + {static} bool Equals(object objA, object objB)
  + {static} bool ReferenceEquals(object objA, object objB)
  ..
  + string ToString() {virtual}
}


abstract class System::Enum <<abstract class>> {
  {method} ...
}


class System::Int32 <<struct>>
class System::Int64 <<struct>>
class System::Double <<struct>>

System::Object <|-- System::ValueType
System::ValueType <|-- System::Int32
System::ValueType <|-- System::Int64
System::ValueType <|-- System::...
System::ValueType <|-- System::Double
System::Enum -|> System::ValueType
System::ValueType <|- Ulamek


hide <<struct>> circle
hide <<class>> circle
hide <<abstract class>> circle

@enduml